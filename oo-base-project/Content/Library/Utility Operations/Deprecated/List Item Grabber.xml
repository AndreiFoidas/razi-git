<?xml version="1.0" encoding="UTF-8"?><operation id="df88ad57-0e62-4ff8-9189-ef6dd86b8bfb">
  <descriptionCdata>df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.51464764-6e3f-4b85-a7ef-db6f918efe26.prompt=Seperator\:
df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.6ea06d1b-d621-42a1-976f-47d9e58f912e.prompt=Item Number\:
df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.description=&lt;pre&gt;This operation will return an item from a tokenized list (i.e. a selection list for a UI component or any other tokenizeable string)\n\nDeprecated in favor of operation with the same name.\n\nInput Parameters\:\nselectionListAsString - a string representing the selection list text (a flattened list, that can be tokenized with the separator) or any other tokenizeable string\nseparator - the separator to use\nitemNumber - the item number you want returned (use "end" for the last one)\n\nResponses\:\nsuccess - the value was retrieved\nfailure - the item was not found in the selection list\n\nScriptlet Example\:\nscriptletResponse \= "SUCCESS";\nscriptletResult \= "";\n\nst \= new java.util.StringTokenizer(selectionListAsString, separator);\n\nif (st\=\=null) {\n  scriptletResponse \= "ITEM_NOT_FOUND";\n} else {\n if (itemNumber \=\= "end")\n{\n   itemNumber \= st.countTokens();\n}\n  if (itemNumber&gt;st.countTokens()) {\n    scriptletResponse \= "ITEM_NOT_FOUND";\n  } else {\n    for (i\=0;i&lt;itemNumber;i++) {\n      st.nextToken();\n    }\n    scriptletResult +\= st.nextToken();\n  }\n}&lt;/pre&gt;
df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.fe48d969-bd24-4d1b-b5d2-4de248b6a833.prompt=List\:
</descriptionCdata>
  <annotation>df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.description</annotation>
  <name>List Item Grabber</name>
  <categories/>
  <inputs>
    <userInputBinding id="fe48d969-bd24-4d1b-b5d2-4de248b6a833">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>selectionListAsString</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.fe48d969-bd24-4d1b-b5d2-4de248b6a833.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="51464764-6e3f-4b85-a7ef-db6f918efe26">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>separator</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.51464764-6e3f-4b85-a7ef-db6f918efe26.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="6ea06d1b-d621-42a1-976f-47d9e58f912e">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>itemNumber</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>df88ad57-0e62-4ff8-9189-ef6dd86b8bfb.6ea06d1b-d621-42a1-976f-47d9e58f912e.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="3685a9b7-1ce5-4a57-a318-da8ebf212e9c">
    <annotation/>
    <name>Operation:List Item Grabber (df88ad57-0e62-4ff8-9189-ef6dd86b8bfb)</name>
    <script>

scriptletResponse = "success";
scriptletResult = "";

st = new java.util.StringTokenizer(selectionListAsString, separator);

if (st==null) {
  scriptletResponse = "failure";
} else {
  if (itemNumber == "end")
  {
     itemNumber = st.countTokens() -1;
  }
  if (itemNumber&gt;st.countTokens()) {
    scriptletResponse = "failure";
  } else {
    for (i=0;i&lt;itemNumber;i++) {
      st.nextToken();
    }
    scriptletResult += st.nextToken();
  }
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="11905f62-6724-49e6-996e-294962ed4201">
      <annotation/>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="5dfd450b-e1de-421e-a916-522b8ef4f1d8">
      <annotation/>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="ac1e82b2-db84-4732-a40f-74462f20f348">
    <annotation/>
    <name>FailureMessage</name>
    <fieldName>FailureMessage</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="43b3f4d4-5bb9-451e-8d48-22368642a60e">
    <baseIcon>jar.png</baseIcon>
    <basePath>Others/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="9d1fd2af-5229-4c3a-955c-837d3d8ebe89">
        <baseIcon>view.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>1bd85f69-23a6-4ea0-93df-419b1487789a</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
    </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>
