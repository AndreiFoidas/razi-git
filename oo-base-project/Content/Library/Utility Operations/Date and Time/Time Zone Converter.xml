<?xml version="1.0" encoding="UTF-8"?><operation id="7955d9b8-a184-457d-8450-8e196e943045">
  <descriptionCdata>7955d9b8-a184-457d-8450-8e196e943045.description=&lt;pre&gt;\nConverts a date from one time zone to another. The date should be given in the format of date/time of the RAS, which is dependant on the Java locale. You can use the "Get Current Date and Time" operation to check upon the default date/time format.\n\nInputs\:\ndate - The date to convert. For example, if the locale of the RAS is English, the date should be in the format of "July 13, 2006 10\:04\:08 AM". \ndateTimeZone - The time zone of the input date. For example, "America/Los_Angeles" or "Europe/Paris". If this input is empty, the local time zone will be used.\noutTimeZone - The time zone of the output date. For example, "America/Los_Angeles" or "Europe/Paris". If this input is empty, the local time zone will be used.\noutLocaleLang - The locale language for output string. For example, "en" or "ja".\noutLocaleCountry - The locale country for output string. For example, "US" or "JP". If outLocaleLang is not specified, this input will be ignored.\n\nResponses\:\nsuccess - The date was converted.\nfailure - The date could not be converted.\n\nResult\:\nResult - The date converted to the specified time zone.\n\nNotes\:\n1. Java Time Zone ids must be used for the dateTimeZone and the outTimeZone inputs. Daylight Saving Time is not supported. Please use the "Is Time Zone Id" operation to make sure that the values assigned to these inputs are valid. \n2. If an invalid time zone is passed to the dateTimeZone or to the outTimeZone inputs, then the operation will fail.\n&lt;/pre&gt;
</descriptionCdata>
  <annotation>7955d9b8-a184-457d-8450-8e196e943045.description</annotation>
  <name>Time Zone Converter</name>
  <categories/>
  <inputs>
    <userInputBinding id="9fa70361-eb45-42a1-898a-8cf9cb25b29f">
      <annotation/>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>date</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="8671a3e0-8e1a-42de-9c8d-ecbeba0baa63">
      <annotation/>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>dateTimeZone</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="50dc61a2-261d-4a56-bacb-3ff23935e35e">
      <annotation/>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>outTimeZone</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="220df444-d012-4543-9331-3911e77b876a">
      <annotation/>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>outLocaleLang</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="07ca3cdf-30bb-43b7-acc6-fed2a99d051f">
      <annotation/>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>outLocaleCountry</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="5679ab54-9038-4623-98a6-2da7a6966938">
    <annotation/>
    <name>Operation Time Zone Converter (7955d9b8-a184-457d-8450-8e196e943045)</name>
    <script>scriptletResponse = "failure";
try{
var reader = new java.text.DateFormat.getDateTimeInstance();
var writer;
var oLocale; 

if(typeof outLocaleLang != 'undefined' &amp;&amp; null != outLocaleLang &amp;&amp; outLocaleLang.length &gt;0)
{
	outLocaleLang = outLocaleLang.toLowerCase();
	if (!isValidLocaleLang(outLocaleLang))
		throw "Invalid outLocaleLang.";
		
     if(typeof outLocaleCountry != 'undefined' &amp;&amp; null != outLocaleCountry &amp;&amp; outLocaleCountry.length &gt;0)
     {
		outLocaleCountry = outLocaleCountry.toUpperCase();
		if (!isValidLocaleCountry(outLocaleCountry))
			throw "Invalid outLocaleCountry.";
		
          oLocale = new java.util.Locale(outLocaleLang, outLocaleCountry); //for exsample US or JP
     }
     else //only has language, no country
     {
          oLocale = new java.util.Locale(outLocaleLang);//for example en or ja
     }
     writer = new java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.LONG, java.text.DateFormat.LONG, oLocale);
}
else //use whatever default is
{
	 writer = new java.text.DateFormat.getDateTimeInstance();
}

var validDateTimeZone = "false";
var validOutTimeZone = "false";

if ( (typeof dateTimeZone == 'undefined') || (null == dateTimeZone) || (dateTimeZone.length == 0) )
{
	reader.setTimeZone(java.util.TimeZone.getDefault());
	validDateTimeZone = "true";
	dateTimeZone = "";
}

if ( (typeof outTimeZone == 'undefined') || (null == outTimeZone) || (outTimeZone.length == 0) )
{
	writer.setTimeZone(java.util.TimeZone.getDefault());
	validOutTimeZone = "true";
	outTimeZone = "";
}

if (validDateTimeZone == "false" || validOutTimeZone == "false")
{
    var zoneIds = java.util.TimeZone.getAvailableIDs();
    
    for (var i=0; i&lt;zoneIds.length; i++) 
    {	    
        if (dateTimeZone.toLowerCase() == zoneIds[i].toLowerCase())
		{
		    validDateTimeZone = "true";
		    reader.setTimeZone(java.util.TimeZone.getTimeZone(zoneIds[i]));
		}
		
		if (outTimeZone.toLowerCase() == zoneIds[i].toLowerCase())
		{
		    validOutTimeZone = "true";
		    writer.setTimeZone(java.util.TimeZone.getTimeZone(zoneIds[i]));
		}
    }
    
    if ( validDateTimeZone == "false" ) 
        throw "Invalid dateTimeZone.";

	if ( validOutTimeZone == "false" )
		throw "Invalid outTimeZone.";	
}
scriptletResult = ""+writer.format(reader.parse(date));	
scriptletResponse = "success";
}
catch (e){
scriptletResponse = "failure";
scriptletResult = ""+e;
}

function isValidLocaleLang(value) {
	var locales = java.util.Locale.getAvailableLocales();
    for (var i=0; i&lt;locales.length;i++) {
        if (value == locales[i].getLanguage()) {
	        return true;
	   }
    }
    return false;
}

function isValidLocaleCountry(value) {
	var locales = java.util.Locale.getAvailableLocales();
    for (var i=0; i&lt;locales.length;i++) {
        if (value == locales[i].getCountry()) {
	        return true;
	   }
    }
    return false;
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="73e10695-d860-4804-8dc5-b489c0fb6809">
      <annotation/>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="5f68ad02-935f-43e1-9e25-456cd890b692">
      <annotation/>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="10996359-3ef7-4117-ad38-9643500f9075">
    <annotation/>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="6a504875-37c2-4668-bfbf-0481c694526b">
    <baseIcon>calendar.png</baseIcon>
    <basePath>/Others/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>
