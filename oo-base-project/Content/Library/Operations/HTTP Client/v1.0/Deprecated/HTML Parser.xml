<?xml version="1.0" encoding="UTF-8"?><operation id="f9b1cead-cc35-4f37-9d8a-38f5dce28930">
  <descriptionCdata>f9b1cead-cc35-4f37-9d8a-38f5dce28930.description=Scans for a specified HTML flag and returns everything between that flag and its closing flag. For example\:\nif flag is table then then everything between &lt;table&gt; and &lt;/table&gt; is returned. The function does support nested tables, specifically if the html had\:\n&lt;table&gt;\nfoo\n&lt;table&gt;\nbar\n&lt;/table&gt;\n&lt;/table&gt;\n&lt;table&gt;\nmoo\n&lt;/table&gt;\nThe inner table (bar) will NOT be gotten. But foo or moo can be, and if foo is gotten it will contain the sub-table bar.\n\ninputs\:\noccurrenceNumber - which flagged section to return, 1 \= first section, 2 \= second. 0 will return the entire document.\nflag - the html flag to parse on, in the above example this was table\nhtml - the html to parse.\n\nResponses\:\nsuccess - the specified flag was returned.\nfailure - The parse failed, the html does not have enough occurrences of flag.\n
</descriptionCdata>
  <annotation>f9b1cead-cc35-4f37-9d8a-38f5dce28930.description</annotation>
  <name>HTML Parser</name>
  <categories/>
  <inputs>
    <userInputBinding id="49ce7b59-3b32-4ab8-aa1e-a7a5b9d310e8">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>html</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="8d139168-85b8-4ec4-8eb7-555b8f0d9b64">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>occurrenceNumber</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="38e48962-e02a-4c89-9d68-e91f81732c0a">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>flag</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="643e3e16-75af-41d9-96cf-7e1069a09d18">
      <annotation/>
      <toContextKey/>
      <fromContextKey/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey/>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_2</inputSymbol>
      <listDelimiter/>
      <value>${occurrenceNumber}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="179dce38-e9ca-4cc2-98a7-c8c9cebc0232">
      <annotation/>
      <toContextKey/>
      <fromContextKey/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey/>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_3</inputSymbol>
      <listDelimiter/>
      <value>${in3}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="96b33663-56f5-4eda-9e86-a7cb644f7107">
      <annotation/>
      <toContextKey/>
      <fromContextKey/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey/>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_4</inputSymbol>
      <listDelimiter/>
      <value>${in4}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="85af9fc7-703b-4419-8744-3b5372510a34">
    <annotation/>
    <name>Operation:HTML Parser (2927cbf5-c809-40d6-bfb0-2cdc20eafdd5)</name>
    <script>scriptletResponse = "failure";
try{//var tables = html;//html.split("&lt;"+flag);
var index = parseInt(occurrenceNumber);
var startFlag = "&lt;"+flag;
var endFlag = "&lt;/"+flag+"&gt;";
while (html.length &gt; 0 &amp;&amp; index &gt;0){
	var subStart = html.indexOf(startFlag);
	if (subStart &lt;0)
		break;
	var accum = subStart;
	var end = getEnd(subStart+1);
	index --;	
	if (index == 0){
		subStart = html.indexOf("&gt;", subStart);
		html = html.substring(subStart + 1 , end);
	}
	else
		html = html.substring(end+(endFlag).length, html.length); 
}
if (html.length &lt;= 0){
	scriptletResponse = "failure";
	scriptletResult = ""+html; 
}
else{
	scriptletResponse = "success";
	scriptletResult = ""+html; 
}
}
catch (e){
scriptletResponse = "failure";
scriptletResult = ""+e;
}

function getEnd(offset) {
	var end = html.indexOf(endFlag, offset);
	var recCheck = html.indexOf(startFlag, offset);
	while (recCheck &lt; end &amp;&amp; recCheck &gt;= 0 &amp;&amp; end &gt;=0){
		if (recCheck &gt; end)
			return end;
		else
			offset = getEnd(recCheck+1)+1; 
		recCheck = html.indexOf(startFlag, offset);
		end = html.indexOf(endFlag, offset);
	}
	if (end &gt; 0)
		return end
	else
		return html.length-1;
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="93e3ab0b-f709-43ce-aee6-f6404b12309e">
      <annotation/>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="ccbe0173-b29a-4c0e-99b3-a3a7070db9e1">
      <annotation/>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="b8d56d2e-3cac-4303-8fc3-296debda132c">
    <annotation/>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="68a2a8f2-c41d-4926-84a1-1b861d5b5697">
    <baseIcon>website.png</baseIcon>
    <basePath>Application/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="d418ffef-7d2c-40de-b998-40e4b6463f98">
        <baseIcon>view.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
    </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>
