<?xml version="1.0" encoding="UTF-8"?><operation id="be6d9510-8b85-40c4-85cd-89fc05890afc">
  <descriptionCdata>be6d9510-8b85-40c4-85cd-89fc05890afc.description=Inserts a new name/value property into a JSON object, where the value is a string. This operation forces the value of the name/value pair to be a string, no matter what data type it actually is. This means that the &lt;newPropertyValue&gt; input does not need to be wrapped in quotes as any quotes entered in this input will be escaped, ending up in the properties' value. \nThe 'Add JSON Property to Object' operation should be used to add values of type other than string, for example\: another object, an array or a number. \n\nInputs\:\n    jsonObject - String representation of a JSON object. Objects in JSON are a collection of name value pairs, separated by a colon and surrounded with curly brackets {}. The name must be a string value, and the value can be a single string or any valid JSON object or array.\nExamples\: {"one"\:1, "two"\:2}, {"one"\:{"a"\:"a","B"\:"B"}, "two"\:"two", "three"\:[1,2,3.4]}\n    newPropertyName - The name of the new property to add to the JSON object. \nExamples\: property1, some_property, another property\n    newPropertyValue - The value for the new property. This is interpreted as a string, no matter what the contents of the input. \nExamples\: value1, another value\n\nResults\:\n    Result - The JSON array with the inserted element.\n\nResponses\:\n    success - The operation completed as stated in the description.\n    failure - The operation completed unsuccessfully. See the message in &lt;returnResult&gt; for details.\n\nExamples\: \n1)\n    Inputs\:\n        jsonObject\: {}\n        newPropertyName\: test\n        newPropertyValue\: test_value\n     Result\:\n         { "test"\:"test_value"}\n2)\n    Inputs\:\n        jsonObject\: {}\n        newPropertyName\: test\n        newPropertyValue\: "test_value"\n     Result\:\n         { "test"\:"\\"test_value\\""}\n3)\n    Inputs\:\n        jsonObject\: {}\n        newPropertyName\: test\n        newPropertyValue\: 1\n     Result\:\n         { "test"\:"1"}\n4)\n    Inputs\:\n        jsonObject\: {}\n        newPropertyName\: test\n        newPropertyValue\: [1,2,3,4]\n     Result\:\n         { "test"\:"[1,2,3,4]"}\n     Note the value in the name/value pair above is not a JSON Array, but a plain string that looks like one. 
</descriptionCdata>
  <annotation>be6d9510-8b85-40c4-85cd-89fc05890afc.description</annotation>
  <name>Add Property to Object</name>
  <categories/>
  <inputs>
    <userInputBinding id="9c99855d-4f2c-4ab6-bed1-c24e1681d766">
      <annotation>String representation of a JSON object. Objects in JSON are a collection of name value pairs separated by a colon and surrounded with curly brackets {}. The name must be a string value and the value can be a single string or any valid JSON object or array. Examples: {"one":1, "two":2}, {"one":{"a":"a","B":"B"}, "two":"two", "three":[1,2,3.4]}</annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>jsonObject</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="b5028ee4-d50d-4d2c-a338-d16435605d5b">
      <annotation>The name of the new property to add to the JSON object. There is no rule as to which character to use. Examples: property1, some_property, another property</annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>newPropertyName</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="23044c50-d6cb-467c-91db-43ca077bc0aa">
      <annotation>The value for the new property. This is interpreted as a string, no matter what the contents of the input. Examples: value, 1, [1,2,3]</annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>newPropertyValue</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <possibleResponses>
    <opResponse id="f9568543-30ea-4005-9cb0-21b4b364e400">
      <annotation/>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules>
        <expression id="3ccfdfdf-d52b-4f07-b8f0-67ec803eb5c0">
          <annotation/>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="3fff9044-4e31-46db-974b-d9a7534b820e">
            <annotation/>
            <name>Config Item</name>
            <text>0</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
    <opResponse id="587a97d6-766e-461d-9bb1-6d32715fe71f">
      <annotation/>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules>
        <expression id="e54743a0-2d23-4af1-a77a-f73f4663df02">
          <annotation/>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="967a3a98-4647-4117-a1c2-883f35639f8b">
            <annotation/>
            <name>Config Item</name>
            <text>-1</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="3e42de67-e608-4e9c-a18a-a80aec637e8d">
    <annotation/>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="082ac17a-6ffa-4c4d-b662-3d9fb608c3e1">
    <baseIcon>text_msg.png</baseIcon>
    <basePath>/E-mail/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <plugin>
    <groupId>com.hp.oo</groupId>
    <artifactId>score-actions-base-plugin</artifactId>
    <version>1.23.2-SNAPSHOT</version>
    <actionName>Add Property to Object</actionName>
  </plugin>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>
