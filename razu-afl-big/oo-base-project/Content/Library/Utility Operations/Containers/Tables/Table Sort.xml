<?xml version="1.0" encoding="UTF-8"?><operation id="d1f4762e-b341-49e9-9002-02d0538735ac">
  <descriptionCdata>d1f4762e-b341-49e9-9002-02d0538735ac.78eeb4ba-64a7-4b32-a01c-4080464182b3.prompt=Reverse Sort
d1f4762e-b341-49e9-9002-02d0538735ac.description=This will sort a table based upon one column in the table.  If all of the entries in that column are numeric the sort will be numeric, otherwise it will be alphabetic.\n\n&lt;pre&gt;\nInputs\:\nTable\: the table to sort\ncolumnDelimiter - the character used to delimit columns\nrowDelimiter - the character used to delimit rows\ncolumn - the number of the column to sort on(starting at 1).\nreverse - set to "true" to make the sort a reverse sort\n\nResults\:\nThe sorted table output with the same row and column delimiters\n\nResponses\:\nsuccess - if the sort completed\nfailure - if there was an error, for example the specified column was missing in one or more entries\n&lt;/pre&gt;
</descriptionCdata>
  <annotation>d1f4762e-b341-49e9-9002-02d0538735ac.description</annotation>
  <name>Table Sort</name>
  <categories/>
  <inputs>
    <userInputBinding id="aae7579f-5fe6-4bba-a944-bd0a5fe676d9">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>table</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="59610a69-f73f-40e5-8aa9-6173de4b6062">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>columnDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="c1c4bedd-6911-40a6-b8fc-a4d709b5ff1c">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>rowDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="da2d6d61-4f23-44fa-ab6d-1e3729830153">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>column</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt/>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="78eeb4ba-64a7-4b32-a01c-4080464182b3">
      <annotation/>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>reverse</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>d1f4762e-b341-49e9-9002-02d0538735ac.78eeb4ba-64a7-4b32-a01c-4080464182b3.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <link>
        <refId>96a1ed25-cdc9-4ff6-8fba-e9c044c5ca53</refId>
        <refName>Boolean - False Default</refName>
      </link>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="9c894aeb-dbf9-4eb5-bf1b-30941db8a16c">
    <annotation/>
    <name>Operation Table Sort (d1f4762e-b341-49e9-9002-02d0538735ac)</name>
    <script>scriptletResult = "";
scriptletResponse = "failure";
error = "false";
outlines = new Array;

// get the lines from the table
lines = table.split(rowDelimiter);

if (lines != null &amp;&amp; lines != "") {

   // count the list and figure out if it is numeric or not
   numeric = "true";
   for (total = 0; total &lt; 10000; total++) {
      // are we at the end of the list?
      if (lines[total] == null || lines[total] == "") break;

      // split the line into columns
      cols = lines[total].split(columnDelimiter);

      // which column do we care about?
      check = column - 1;

      // is there acutally data?
      if (cols == null || cols[check] == null) {
          error = "true";
          break;
      }
      if (cols[check].match(/[^0-9.]/) != null || cols[check].match(/[0-9.]/) == null) numeric = false;
      outlines[total] = lines[total];
   }

   if (error == "false") {
      outlines.sort(sortTable);

      // create the new list
      for (i = 0; i &lt; total; i++) {
         if (outlines[i] == null) break;
         if (i != 0) scriptletResult += rowDelimiter;
         scriptletResult += outlines[i];
      }

      scriptletResponse = "success";
   }
}

// this assumes we are getting two lines as input and deciding based on one column
function sortTable(a,b) {
   // split the line into columns
   colA = a.split(columnDelimiter);
   colB = b.split(columnDelimiter);
   // which column do we care about?
   check = column - 1;
   if (numeric == "true") {
      value =  (colA[check] - colB[check]);
   }
   else {
      if (colA[check] == colB[check]) {
         value = 0;
      }
      else {
         value = (colA[check] &gt; colB[check]) ? 1 : -1;
      }
   }
   // do we need to reverse the sort?
   if (typeof(reverse) != "undefined" &amp;&amp; reverse.toLowerCase() == "true") {
       value = -value;
   }
   return(value);
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="a4a88e2e-3bce-40af-92e5-6a160ce58fb0">
      <annotation/>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="c3fb83a4-07db-4dcb-b5c5-bc0ae45dcb2a">
      <annotation/>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="675b7deb-b5cd-450e-b80e-8d351697f498">
    <annotation/>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="7be80d6b-ea9d-465c-a031-a8c3787989a1">
    <baseIcon>database_table.png</baseIcon>
    <basePath>Databases/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="b9b3d975-6e41-4d85-8eab-6fd0de3b2a81">
        <baseIcon>refresh.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>
